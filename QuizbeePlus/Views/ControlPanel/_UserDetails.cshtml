
@model QuizbeePlus.ViewModels.UserDetailsViewModel

<div class="row">
    @Html.Partial("_Loader", "userLoader")
    <div class="col-md-4">
        <div class="panel panel-default panel-fill">
            <img id="userAvatar" src="@Url.UserPhoto(Model.User.User.Id)" class="img-thumbnail" width="100%">
        </div>
    </div>
    <div class="col-md-8">
        <div class="panel panel-default panel-fill">
            <div class="panel-heading">
                <h3 class="panel-title">User Info</h3>
            </div>
            <div class="panel-body">
                <form id="EmailForm">
                    <div class="form-group">
                        <label for="UserName">Photo</label>
                        <input type="file" name="Photo" id="Photo" class="form-control" accept=".png,.jpg,.jpeg,.gif,.tif">
                        <input type="hidden" id="PhotoURL">
                    </div>
                    <div class="form-group">
                        <label for="UserName">User Name</label>
                        <input type="text" value="@Model.User.User.UserName" id="UserName" name="UserName" class="form-control" required="">
                    </div>
                    <div class="form-group">
                        <label for="Email">Email</label>
                        <input type="email" value="@Model.User.User.Email" id="Email" name="Email" class="form-control" required="">
                    </div>
                    <button class="btn btn-success waves-effect waves-light w-md" id="updateUserButton" type="button">Update User Info</button>
                    <button class="btn btn-danger waves-effect waves-light w-md" id="deleteUserButton" type="button">Delete User</button>
                    <button class="btn btn-primary waves-effect waves-light w-md" id="goBackButton" type="button">Go Back</button>

                    <div id="EmailFormErrorsDiv" style="display:none" class="mt-2 alert alert-icon alert-danger m" role="alert">
                        <i class="mdi mdi-alert-circle"></i>
                        <div id="EmailFormErrors"></div>
                    </div>
                </form>
            </div>
        </div>
        <div class="panel panel-default panel-fill">
            <div class="panel-heading">
                <h3 class="panel-title">User Roles</h3>
            </div>
            <div class="panel-body">

                <table class="table table-striped table-bordered m-b-0">
                    <thead>
                        <tr>
                            <th>Role</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var role in Model.User.Roles)
                        {
                            <tr>
                                <td class="align-middle">
                                    @role.Name
                                </td>
                                <td class="align-middle wrap-td">
                                    <div class="input-group">
                                        <a data-role="@role.Id" role="button" class="userRoleDelete btn btn-primary btn-sm"><i class="fas fa-edit mg-r-10"></i>&nbsp;Delete User Role</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (Model.AvailableRoles != null && Model.AvailableRoles.Count > 0)
                {
                    <form id="UserRolesForm">
                        <div class="form-group">
                            <label for="UserName">Add Role to User</label>
                            <select class="form-control" type="text" id="AvailableRoles" name="AvailableRoles">
                                <option selected disabled>Select Available Roles</option>
                                @foreach (var role in Model.AvailableRoles)
                                {
                                    <option value="@role.Id">@role.Name</option>
                                }
                            </select>
                        </div>
                        <button class="btn btn-success waves-effect waves-light w-md" id="addUserRoleButton" type="button">Add New User Role</button>

                        <div id="UserRolesFormErrorsDiv" style="display:none" class="mt-2 alert alert-icon alert-danger m" role="alert">
                            <i class="mdi mdi-alert-circle"></i>
                            <div id="UserRolesFormErrors"></div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        $("#updateUserButton").click(function() {
            $("#EmailFormErrorsDiv").hide();

            $("#userLoader").show();
            $.ajax({
                type: "POST",
                async: true,
                url: '@Url.UpdateUserInfo(Model.User.User.Id)',
                data: {
                    UserName: $("#UserName").val(),
                    Email: $("#Email").val(),
                    Photo: $("#PhotoURL").val()
                }
            }).done(function(data) {
                $("#userLoader").hide();
                if (data.Success) {
                    swal({
                        title: 'User Details Updated',
                        type: 'success',
                        confirmButtonColor: '#4fa7f3'
                    });
                } else {
                    $("#EmailFormErrors").html(data.Errors);
                    $("#EmailFormErrorsDiv").slideDown();
                    console.log(data.Errors);
                }
            }).fail(function(XMLHttpRequest, textStatus, errorThrown) {
                $("#userLoader").hide();
                $("#EmailFormErrors").html(errorThrown);
                $("#EmailFormErrorsDiv").slideDown();
                console.log(errorThrown);
            });
        });

        $("#deleteUserButton").click(function() {
            $("#EmailFormErrorsDiv").hide();

            $("#userLoader").show();
            $.ajax({
                    type: "POST",
                    async: true,
                    url: '@Url.DeleteUser(Model.User.User.Id)'
            }).done(function(data) {
                $("#userLoader").hide();
                if (data.Success) {
                    swal({
                        title: 'User Deleted',
                        type: 'success',
                        confirmButtonColor: '#4fa7f3'
                    }).then(function() {
                        $("#goBackButton").click();
                    });
                } else {
                    $("#EmailFormErrors").html(data.Errors);
                    $("#EmailFormErrorsDiv").slideDown();
                    console.log(data.Errors);
                }
            }).fail(function(XMLHttpRequest, textStatus, errorThrown) {
                $("#userLoader").hide();
                $("#EmailFormErrors").html(errorThrown);
                $("#EmailFormErrorsDiv").slideDown();
                console.log(errorThrown);
            });
        });

        $("#goBackButton").click(function() {
            $("#userLoader").show();

            $.ajax({
                    type: "GET",
                    async: true,
                    url: '@Url.Users()',
            }).done(function(data) {
                $('#usersTab').toggle('slide', {
                    direction: 'left'
                }, 250, function() {
                    $("#usersTab").html(data);
                    $('#usersTab').toggle('slide', {
                        direction: 'right'
                    }, 250);
                });
            }).fail(function(XMLHttpRequest, textStatus, errorThrown) {
                $("#userLoader").hide();
                alert(errorThrown);
            });
        });

        $("#Photo").change(function() {
            var formData = new FormData();
            var totalFiles = document.getElementById("Photo").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("Photo").files[i];
                formData.append("Photo", file);
            }

            $("#userLoader").show();

            $.ajax({
                type: "POST",
                url: '@Url.UploadImage()',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false
            }).done(function(data) {
                $("#userLoader").hide();
                if (data.Success) {
                    $("#PhotoURL").val(data.Image);
                    $("#userAvatar").attr('src', data.ImageURL);
                } else {
                    $("#EmailFormErrors").html(data.Message);
                    $("#EmailFormErrorsDiv").slideDown();
                    console.log(data.Message);
                }
            }).fail(function(xhr, status, errorThrown) {
                $("#userLoader").hide();
                $("#EmailFormErrors").html(errorThrown);
                $("#EmailFormErrorsDiv").slideDown();
                console.log(errorThrown);
            })
        });

        $("#addUserRoleButton").click(function () {
            var role = $("#AvailableRoles").val();

            if (role != "" && role != null && role != undefined) {
                $("#UserRolesFormErrorsDiv").hide();

                $("#userLoader").show();
                $.ajax({
                    type: "POST",
                    async: true,
                    url: '@Url.AddUserRole(Model.User.User.Id)',
                    data: {
                        roleID: role,
                    }
                }).done(function(data) {
                    $("#userLoader").hide();
                    if (data.Success) {
                        swal({
                            title: 'Role added to User',
                            type: 'success',
                            confirmButtonColor: '#4fa7f3'
                        }).then(function () {
                            $("#goBackButton").click();
                        });
                    } else {
                        $("#UserRolesFormErrors").html(data.Errors);
                        $("#UserRolesFormErrorsDiv").slideDown();
                        console.log(data.Errors);
                    }
                }).fail(function(XMLHttpRequest, textStatus, errorThrown) {
                    $("#userLoader").hide();
                    $("#UserRolesFormErrors").html(errorThrown);
                    $("#UserRolesFormErrorsDiv").slideDown();
                    console.log(errorThrown);
                });
            }
            else {
                swal({
                    title: 'Select Role for User',
                    type: 'warning',
                    confirmButtonColor: '#4fa7f3'
                });
            }
            
        });

        $(".userRoleDelete").click(function () {
            var role = $(this).attr("data-role");

            if (role != "" && role != null && role != undefined) {
                $("#UserRolesFormErrorsDiv").hide();

                $("#userLoader").show();
                $.ajax({
                    type: "POST",
                    async: true,
                    url: '@Url.RemoveUserRole(Model.User.User.Id)',
                    data: {
                        roleID: role,
                    }
                }).done(function(data) {
                    $("#userLoader").hide();
                    if (data.Success) {
                        swal({
                            title: 'Role delete from User',
                            type: 'success',
                            confirmButtonColor: '#4fa7f3'
                        }).then(function () {
                            $("#goBackButton").click();
                        });
                    } else {
                        $("#UserRolesFormErrors").html(data.Errors);
                        $("#UserRolesFormErrorsDiv").slideDown();
                        console.log(data.Errors);
                    }
                }).fail(function(XMLHttpRequest, textStatus, errorThrown) {
                    $("#userLoader").hide();
                    $("#UserRolesFormErrors").html(errorThrown);
                    $("#UserRolesFormErrorsDiv").slideDown();
                    console.log(errorThrown);
                });
            }
            else {
                swal({
                    title: 'Select Role for User',
                    type: 'warning',
                    confirmButtonColor: '#4fa7f3'
                });
            }            
        });
    });
</script>