@model QuizbeePlus.ViewModels.EditQuizViewModel
@{
	ViewBag.Title = Model.PageInfo.PageTitle;	
}

<div class="container-fluid">
	<div class="row mb-4">
		<div class="col-md-12">
			<div class="card">
				<div class="card-header">
					<ul class="nav nav nav-tabs card-header-tabs">
						<li class="nav-item">
							<a class="nav-link" href="@Url.QuizzesList()"><i class="fas fa-clipboard-list"></i>&nbsp;Quizzes</a>
						</li>
						<li class="nav-item">
							<a class="nav-link active" href="#">
								<i class="fas fa-save"></i>
								&nbsp;@Model.PageInfo.PageTitle
							</a>
						</li>
					</ul>
				</div>
				<div class="card-body">
					<form role="form" id="operationForm" method="post" action="@Url.EditQuiz(Model.ID)">
						<input type="hidden" id="ID" name="ID" value="@Model.ID" />
						<div class="form-group">
							<label for="Title">Quiz Name</label>
							<input class="form-control" type="text" id="Name" name="Name" value="@Model.Name" placeholder="Enter quiz name">
							@if (!ViewData.ModelState.IsValid && ViewData.ModelState["Name"] != null && ViewData.ModelState["Name"].Errors.Count > 0)
							{
								<div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
									<button type="button" class="close" data-dismiss="alert" aria-label="Close">
										<span aria-hidden="true">×</span>
									</button>
									<i class="mdi mdi-alert"></i>
									@Html.ValidationMessageFor(m => m.Name, "", new { @class = "tx-danger" })
								</div>
							}
						</div>
						<div class="form-group">
							<label for="Description">Description</label>
							<textarea class="form-control" name="Description" placeholder="Enter some Description about this quiz" rows="4">@Model.Description</textarea>
							@if (!ViewData.ModelState.IsValid && ViewData.ModelState["Description"] != null && ViewData.ModelState["Description"].Errors.Count > 0)
							{
								<div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
									<button type="button" class="close" data-dismiss="alert" aria-label="Close">
										<span aria-hidden="true">×</span>
									</button>
									<i class="mdi mdi-alert"></i>
									@Html.ValidationMessageFor(m => m.Description, "", new { @class = "tx-danger" })
								</div>
							}
						</div>               
                        <div class="form-group">
                            <label for="Title">Question Type</label>

                            <select class="form-control" type="text" id="SelectedQuizType" name="SelectedQuizType" disabled>
                                @{ 
                                    var ID = (int)Model.SelectedQuizType;
                                }
                                <option value="@ID" selected>@Model.SelectedQuizType.ToString()</option>
                            </select>

                            @if (!ViewData.ModelState.IsValid && ViewData.ModelState["SelectedQuizType"] != null && ViewData.ModelState["SelectedQuizType"].Errors.Count > 0)
                            {
                                <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">×</span>
                                    </button>
                                    <i class="mdi mdi-alert"></i>
                                    @Html.ValidationMessageFor(m => m.SelectedQuizType, "", new { @class = "tx-danger" })
                                </div>
                            }
                        </div>
						<div class="form-group">
							<label for="Description">Should this Quiz be taken in a timely manner?</label>
							<div class="form-control checkbox form-check-inline">
								@{
									var quizTimerChecked = Model.EnableQuizTimer ? "checked" : string.Empty;
								}
								<input type="checkbox" id="QuizTimerCheckbox" @quizTimerChecked> Yes, Enable Quiz Timer
								<input type="hidden" name="EnableQuizTimer" id="EnableQuizTimer" />
							</div>
							@if (!ViewData.ModelState.IsValid && ViewData.ModelState["EnableQuizTimer"] != null && ViewData.ModelState["EnableQuizTimer"].Errors.Count > 0)
							{
								<div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
									<button type="button" class="close" data-dismiss="alert" aria-label="Close">
										<span aria-hidden="true">×</span>
									</button>
									<i class="mdi mdi-alert"></i>
									@Html.ValidationMessageFor(m => m.EnableQuizTimer, "", new { @class = "tx-danger" })
								</div>
							}
						</div>
						<div id="timerSection">
							<div class="form-group">
								<label for="Hours">Hours</label>
								<input class="form-control" type="text" id="Hours" name="Hours" value="@Model.Hours" placeholder="Enter Hours Duration">
								@if (!ViewData.ModelState.IsValid && ViewData.ModelState["Hours"] != null && ViewData.ModelState["Hours"].Errors.Count > 0)
								{
									<div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
										<button type="button" class="close" data-dismiss="alert" aria-label="Close">
											<span aria-hidden="true">×</span>
										</button>
										<i class="mdi mdi-alert"></i>
										@Html.ValidationMessageFor(m => m.Hours, "", new { @class = "tx-danger" })
									</div>
								}
							</div>
							<div class="form-group">
								<label for="Minutes">Minutes</label>
								<input class="form-control" type="text" id="Minutes" name="Minutes" value="@Model.Minutes" placeholder="Enter Minutes Duration">
								@if (!ViewData.ModelState.IsValid && ViewData.ModelState["Minutes"] != null && ViewData.ModelState["Minutes"].Errors.Count > 0)
								{
									<div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
										<button type="button" class="close" data-dismiss="alert" aria-label="Close">
											<span aria-hidden="true">×</span>
										</button>
										<i class="mdi mdi-alert"></i>
										@Html.ValidationMessageFor(m => m.Minutes, "", new { @class = "tx-danger" })
									</div>
								}
							</div>                            
                            <div class="form-group">
								@if (!ViewData.ModelState.IsValid && ViewData.ModelState["TimeDuration"] != null && ViewData.ModelState["TimeDuration"].Errors.Count > 0)
								{
									<div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
										<button type="button" class="close" data-dismiss="alert" aria-label="Close">
											<span aria-hidden="true">×</span>
										</button>
										<i class="mdi mdi-alert"></i>
										@Html.ValidationMessageFor(m => m.TimeDuration, "", new { @class = "tx-danger" })
									</div>
								}
							</div>
							<div class="form-group">
								<label for="Description">Do you want to enable each Question Timer?</label>
								<div class="form-control checkbox form-check-inline">
									@{
										var questionTimerChecked = Model.EnableQuestionTimer ? "checked" : string.Empty;
									}
									<input type="checkbox" id="EnableQuestionTimer" name="EnableQuestionTimer" value="true" @questionTimerChecked> Yes, Enable Question Timer
								</div>
								@if (!ViewData.ModelState.IsValid && ViewData.ModelState["EnableQuestionTimer"] != null && ViewData.ModelState["EnableQuestionTimer"].Errors.Count > 0)
								{
									<div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
										<button type="button" class="close" data-dismiss="alert" aria-label="Close">
											<span aria-hidden="true">×</span>
										</button>
										<i class="mdi mdi-alert"></i>
										@Html.ValidationMessageFor(m => m.EnableQuestionTimer, "", new { @class = "tx-danger" })
									</div>
								}
							</div>
						</div>
						<hr />
						<button type="submit" id="updateButton" class="btn btn-warning waves-effect waves-light w-md"><i class="fas fa-save mg-r-10"></i>&nbsp;Update this Quiz</button>
						<button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete this Quiz</button>
						<a href="@Url.QuestionsList(Model.ID)" role="button" class="btn btn-info waves-effect waves-light w-md"><i class="fas fa-list-ul mg-r-10"></i>&nbsp;Questions from this Quiz</a>

						@if (Model.NoOfQuestions > 0)
						{
							<a href="@Url.AttemptQuiz(Model.ID)" role="button" class="btn btn-primary waves-effect waves-light w-md"><i class="fas fa-certificate mg-r-10"></i>&nbsp;Attempt this Quiz</a>
						}
						<a href="@Url.QuizzesList()" role="button" class="btn btn-primary waves-effect waves-light w-md"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel and Go Back</a>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<div id="deleteModal" class="modal fade">
	<div class="modal-dialog" role="document">
		<div class="modal-content tx-size-sm">
			<div class="modal-body tx-center pd-y-20 pd-x-20">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
				<i class="icon icon ion-android-warning tx-100 tx-warning lh-1 mg-t-20 d-inline-block"></i>
				<h4 class="tx-warning tx-semibold mg-b-20">Warning!</h4>
				<p class="mg-b-20 mg-x-20">Are you sure you want to delete this record? This will not be reversible.</p>
				<button type="button" id="deleteButton" class="btn btn-danger mg-b-20" data-toggle="modal" data-dismiss="modal"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
				<button type="button" class="btn btn-primary mg-b-20" data-toggle="modal" data-dismiss="modal"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel</button>
			</div>
		</div>
	</div>
</div>

<script>
	$(document).ready(function () {
		CheckForTimerSection();

		$("#updateButton").click(function () {
			$("#operationForm").attr("action", "@Url.EditQuiz(Model.ID)");
			$("#operationForm").submit();
		});
		$("#deleteButton").click(function () {
			$("#operationForm").attr("action", "@Url.DeleteQuiz(Model.ID)");
			$("#operationForm").submit();
		});

		$("#QuizTimerCheckbox").change(function () {
			CheckForTimerSection();
		});
	});

	function CheckForTimerSection() {
		if ($('#QuizTimerCheckbox').is(":checked")) {
			$('#EnableQuizTimer').val("true");
			$("#timerSection").show();
		}
		else {
			$('#EnableQuizTimer').val("false");
			$("#timerSection").hide();
		}
	}
</script>