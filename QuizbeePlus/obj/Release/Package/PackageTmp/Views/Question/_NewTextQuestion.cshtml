@model QuizbeePlus.ViewModels.NewQuestionViewModel

<form role="form" id="operationForm" method="post" action="@Url.NewQuestion(Model.QuizID)">
    <input type="hidden" id="QuizID" name="QuizID" value="@Model.QuizID" />

    <div class="form-group">
        <label for="Title">Question Title</label>
        <input class="form-control" type="text" id="Title" name="Title" value="@Model.Title" placeholder="Enter question title">
        @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Title"] != null && ViewData.ModelState["Title"].Errors.Count > 0)
        {
            <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <i class="mdi mdi-alert"></i>
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "tx-danger" })
            </div>
        }
    </div>

    <div>
        <label><span name="optionNoText">Correct Options</span></label>
    </div>

    @if (Model.CorrectOptions != null && Model.CorrectOptions.Count > 0)
    {
        foreach (var correctOption in Model.CorrectOptions)
        {
            <div class="option form-group">
                <input class="form-control" type="text" name="correctOption@(Model.CorrectOptions.IndexOf(correctOption) + 1)" placeholder="Enter Correct Option" value="@correctOption.Answer">
            </div>
        }
    }
    else
    {
        <div class="option form-group">
            <input class="form-control" type="text" name="correctOption1" placeholder="Enter Correct Option" value="">
        </div>
    }

    <span id="correctOptions"></span>

    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["CorrectOptions"] != null && ViewData.ModelState["CorrectOptions"].Errors.Count > 0)
    {
        <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
            <i class="mdi mdi-alert"></i>
            @Html.ValidationMessageFor(m => m.CorrectOptions, "", new { @class = "tx-danger" })
        </div>
    }

    <div>
        <label><span name="optionNoText">Options</span></label>
    </div>

    @if (Model.Options != null && Model.Options.Count > 0)
    {
        foreach (var option in Model.Options)
        {
            <div class="option form-group">
                <input class="form-control" type="text" name="option@(Model.Options.IndexOf(option) + 2)" placeholder="Enter Other Option" value="@option.Answer">
            </div>
        }
    }
    else
    {
        <div class="option form-group">
            <input class="form-control" type="text" name="option1" placeholder="Enter Other Option" value="">
        </div>
    }

    <span id="options"></span>

    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Options"] != null && ViewData.ModelState["Options"].Errors.Count > 0)
    {
        <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
            <i class="mdi mdi-alert"></i>
            @Html.ValidationMessageFor(m => m.Options, "", new { @class = "tx-danger" })
        </div>
    }

    <div id="actionsRow">
        <hr />
        <button type="button" id="addCorrectOptionButton" class="btn btn-info waves-effect waves-light w-md"><i class="fas fa-plus mg-r-10"></i>&nbsp;Add Correct Option</button>
        <button type="button" id="addOptionButton" class="btn btn-info waves-effect waves-light w-md"><i class="fas fa-plus mg-r-10"></i>&nbsp;Add Option</button>
        <button type="submit" id="addButton" class="btn btn-success waves-effect waves-light w-md"><i class="fas fa-save mg-r-10"></i>&nbsp;Save this Question and Add Another</button>
        <a href="@Url.QuestionsList(Model.QuizID)" role="button" class="btn btn-primary waves-effect waves-light w-md"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel and Go Back</a>
    </div>
</form>


<div class="correctOptionRowTemplate" style="display:none">
    <input class="form-control" type="text" name="correctOptionNo" placeholder="Enter Correct Option">
</div>

<div class="optionRowTemplate" style="display:none">
    <input class="form-control" type="text" name="optionNo" placeholder="Enter Option">
</div>


<script>
	$(document).ready(function () {
		$("#addCorrectOptionButton").click(function () {
			AddCorrectOption();
		});

		$("#addOptionButton").click(function () {
			AddOption();
		});        
	});
    
	function AddCorrectOption() {
		$('<div/>', {
				'class': 'option form-group', html: GetCorrectOptionHtml()
		}).hide().insertBefore('#correctOptions').slideDown('slow');
	}

	function AddOption() {
		$('<div/>', {
				'class': 'option form-group', html: GetOptionHtml()
		}).hide().insertBefore('#options').slideDown('slow');
	}

	function GetCorrectOptionHtml() {
		var len = $('.option').length + 1;
		var $html = $('.correctOptionRowTemplate').clone();
		$html.find('[name=correctOptionNo]')[0].name = "correctOptionNo" + len;
		return $html.html();
	}

	function GetOptionHtml() {
		var len = $('.option').length + 1;
		var $html = $('.optionRowTemplate').clone();
		$html.find('[name=optionNo]')[0].name = "optionNo" + len;
		return $html.html();
	}    
</script>