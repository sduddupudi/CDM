@if (User.Identity.IsAuthenticated)
{
    <li class="dropdown notification-list">
        <a class="nav-link dropdown-toggle waves-effect waves-light nav-user" data-toggle="dropdown" href="#" role="button"
           aria-haspopup="false" aria-expanded="false">
            <img src="@Url.MyPhoto()" alt="user" class="rounded-circle">
            <span class="ml-1 pro-user-name">
                @User.Identity.Name
                <i class="mdi mdi-chevron-down"></i>
            </span>
        </a>
        <div class="dropdown-menu dropdown-menu-right profile-dropdown ">
            <a href="@Url.Me()" class="dropdown-item notify-item">
                <i class="fas fa-user"></i> <span>My Account</span>
            </a>
            @if (User.IsInRole(Variables.Administrator))
            {
                <a href="@Url.ControlPanel()" class="dropdown-item notify-item">
                    <i class="fas fa-user"></i> <span>Control Panel</span>
                </a>
            }
            <a id="logout" class="dropdown-item notify-item">
                <i class="fas fa-sign-out-alt"></i> <span>Logout</span>
            </a>
        </div>
    </li>
}
else if (Request.QueryString["User"] != null && Request.QueryString["User"].ToString().ToLower() == "mockuser")
{
    <li class="menu-item">
        <a class="nav-link waves-effect waves-light"  role="button">
            <i class="fas fa-user"></i> <span>Mock User</span>
            &nbsp;&nbsp;&nbsp;
        </a>
    </li>
}
else
{
    <li class="menu-item">
        <a class="nav-link waves-effect waves-light" href="@Url.Register()" role="button">
            <i class="fas fa-user"></i> <span>Register</span>
            &nbsp;&nbsp;&nbsp;
        </a>
    </li>
    <li class="menu-item">
        <a class="nav-link waves-effect waves-light" href="@Url.Login()" role="button">
            <i class="fas fa-sign-in-alt"></i> <span>Login</span>
        </a>
    </li>
}